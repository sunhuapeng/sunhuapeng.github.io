import{o as s,c as a,a as n}from"./index.391a9efd.js";const p={class:"markdown-body"},e=n('<html><p class="title" style="display:none;">threejs 笔记 05 —— 光源 </p></html><html><p class="article_id" style="display:none;">6844904143044214792</p></html><html><p class="target" style="display:none;">threejs</p></html><html><p class="create_time" style="display:none;">1588054435000</p></html><html><p class="update_time" style="display:none;">1588054435001</p></html><html><p class="cover_image" style="display:none;">https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171bec1da3fd19db~tplv-t2oaga2asx-watermark.image</p></html><html><p class="brief_content" style="display:none;">环境光会均匀的照亮场景中的所有物体。 从一个点向各个方向发射的光源。一个常见的例子是模拟一个灯泡发出的光。 平行光是沿着特定方向发射的光。这种光的表现像是无限远,从它发出的光线都是平行的。常常用平行光来模拟太阳光 的效果; 太阳足够远，因此我们可以认为太阳的位置是无限远，所以我…</p></html><h3 class="heading">环境光</h3><p>光源的基类为<a target="_blank" href="https://threejs.org/docs/index.html#api/zh/lights/Light">Light</a></p><h5 class="heading">AmbientLight</h5><p>环境光会均匀的照亮场景中的所有物体。</p><p>环境光不能用来投射阴影，因为它没有方向，也不会体现物体的棱角</p><pre><code class="hljs javascript" lang="javascript"><span class="hljs-comment">/** * 创建网格模型 */</span><span class="hljs-keyword">var</span> geometry = <span class="hljs-keyword">new</span> THREE.BoxGeometry(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>); <span class="hljs-comment">//创建一个立方体几何对象Geometry</span><span class="hljs-keyword">var</span> material = <span class="hljs-keyword">new</span> THREE.MeshLambertMaterial({  <span class="hljs-attr">color</span>: <span class="hljs-number">0xffffff</span>}); <span class="hljs-comment">//材质对象Material</span><span class="hljs-keyword">var</span> mesh = <span class="hljs-keyword">new</span> THREE.Mesh(geometry, material); <span class="hljs-comment">//网格模型对象Mesh</span>scene.add(mesh); <span class="hljs-comment">//网格模型添加到场景中</span><span class="hljs-keyword">var</span> light = <span class="hljs-keyword">new</span> THREE.AmbientLight( <span class="hljs-number">0x404040</span> ); <span class="hljs-comment">// soft white light</span>scene.add( light );</code></pre><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171be941a6a4d5f3~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><h5 class="heading">可接受参数</h5><p>color, intensity</p><p>颜色和光照强度</p><h5 class="heading">color</h5><pre><code class="hljs javascript" lang="javascript"><span class="hljs-keyword">var</span> light = <span class="hljs-keyword">new</span> THREE.AmbientLight( <span class="hljs-number">0xff0000</span> ); <span class="hljs-comment">// soft white light</span>scene.add( light );</code></pre><p>模型本身的颜色设置为白色，受平行光照射颜色影响比较明显</p><pre><code class="hljs javascript" lang="javascript"><span class="hljs-keyword">var</span> geometry = <span class="hljs-keyword">new</span> THREE.BoxGeometry(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>); <span class="hljs-comment">//创建一个立方体几何对象Geometry</span><span class="hljs-keyword">var</span> material = <span class="hljs-keyword">new</span> THREE.MeshLambertMaterial({  <span class="hljs-attr">color</span>: <span class="hljs-number">0xffffff</span>}); <span class="hljs-comment">//材质对象Material</span><span class="hljs-keyword">var</span> mesh = <span class="hljs-keyword">new</span> THREE.Mesh(geometry, material); <span class="hljs-comment">//网格模型对象Mesh</span>scene.add(mesh); <span class="hljs-comment">//网格模型添加到场景中</span></code></pre><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171be963a9d45bca~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><h5 class="heading">intensity</h5><pre><code class="hljs javascript" lang="javascript"><span class="hljs-keyword">var</span> ambient = <span class="hljs-keyword">new</span> THREE.AmbientLight(<span class="hljs-number">0xff0000</span>, <span class="hljs-number">0.6</span>);</code></pre><p>intensity默认值为1；</p><p>光照效果设置为0.6，明显比上一个效果暗许多</p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171be97e8314e38b~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><h3 class="heading"><a target="_blank" href="https://threejs.org/docs/index.html#api/zh/lights/PointLight">点光源</a></h3><p>从一个点向各个方向发射的光源。一个常见的例子是模拟一个灯泡发出的光。</p><pre><code class="hljs javascript" lang="javascript"><span class="hljs-comment">/** * 光源设置 */</span><span class="hljs-comment">//点光源</span><span class="hljs-keyword">var</span> point = <span class="hljs-keyword">new</span> THREE.PointLight(<span class="hljs-number">0xffffff</span>);point.position.set(<span class="hljs-number">400</span>, <span class="hljs-number">200</span>, <span class="hljs-number">300</span>); <span class="hljs-comment">//点光源位置</span><span class="hljs-comment">// 通过add方法插入场景中，不插入的话，渲染的时候不会获取光源的信息进行光照计算</span>scene.add(point); <span class="hljs-comment">//点光源添加到场景中</span></code></pre><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171beb8959e52f79~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><h5 class="heading">位置</h5><p>点光源位置可以调整，调整光照角度</p><pre><code class="hljs javascript" lang="javascript">  <span class="hljs-keyword">let</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;btn&quot;</span>);  <span class="hljs-keyword">if</span> (btn) {    btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{      setInterval(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {        <span class="hljs-keyword">let</span> y = point.position.y;        point.position.setY(y - <span class="hljs-number">10</span>);      }, <span class="hljs-number">100</span>);    };  }</code></pre><p>下面可以看一下光源运动后对模型产生的影响；为了方便观看，添加一个<a target="_blank" href="https://threejs.org/docs/index.html#api/zh/helpers/PointLightHelper">点光源的辅助对象</a></p><pre><code class="hljs javascript" lang="javascript"><span class="hljs-keyword">var</span> sphereSize = <span class="hljs-number">10</span>; <span class="hljs-comment">// 辅助对象尺寸</span><span class="hljs-keyword">var</span> pointLightHelper = <span class="hljs-keyword">new</span> THREE.PointLightHelper(point, sphereSize);scene.add(pointLightHelper);</code></pre><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171bec1da3fd19db~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><h5 class="heading">颜色</h5><p>和环境光一样，点光源也可以通过调整颜色，改变场景中物体的颜色</p><p><code>point.color = new THREE.Color(0xff0000)</code></p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171bec44da221282~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><h5 class="heading">强度</h5><p><code>point.intensity = 5</code></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171bec6b5c6c389c~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><p><code>point.intensity = 0.5</code></p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171bec7146437147~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><h3 class="heading"><a target="_blank" href="https://threejs.org/docs/index.html#api/zh/lights/DirectionalLight">平行光</a></h3><p>平行光是沿着特定方向发射的光。这种光的表现像是无限远,从它发出的光线都是平行的。常常用平行光来模拟太阳光 的效果; 太阳足够远，因此我们可以认为太阳的位置是无限远，所以我们认为从太阳发出的光线也都是平行的。</p><pre><code class="hljs javascript" lang="javascript"><span class="hljs-keyword">var</span> directionalLight = <span class="hljs-keyword">new</span> THREE.DirectionalLight( <span class="hljs-number">0xffffff</span>, <span class="hljs-number">0.5</span> );scene.add( directionalLight );</code></pre><p>关于平行光对象，位置、颜色、光照强度，与其他光源api基本相同，主要看一下光源跟踪</p><h5 class="heading">光源跟踪 target</h5><p>平行光的方向是从它的位置到目标位置。默认的目标位置为原点 (0,0,0)。</p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171bf5fa6be6011a~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><pre><code class="hljs javascript" lang="javascript">  <span class="hljs-comment">/**   * 光源设置   */</span>  <span class="hljs-comment">// 平行光</span>  <span class="hljs-keyword">var</span> directionalLight = <span class="hljs-keyword">new</span> THREE.DirectionalLight(<span class="hljs-number">0xffffff</span>, <span class="hljs-number">1</span>);  <span class="hljs-keyword">let</span> v3 = <span class="hljs-keyword">new</span> THREE.Vector3(<span class="hljs-number">120</span>, <span class="hljs-number">120</span>, <span class="hljs-number">-100</span>);  directionalLight.position.copy(v3);  scene.add(directionalLight);  <span class="hljs-keyword">var</span> helper = <span class="hljs-keyword">new</span> THREE.DirectionalLightHelper(directionalLight, <span class="hljs-number">5</span>);  scene.add(helper);  <span class="hljs-keyword">let</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;btn&quot;</span>);  <span class="hljs-keyword">if</span> (btn) {    btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{      setInterval(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {        <span class="hljs-keyword">let</span> y = directionalLight.position.y;        directionalLight.position.setY(y - <span class="hljs-number">5</span>);        helper.update ()      }, <span class="hljs-number">100</span>);    };  }</code></pre><p>设置target之后，光源可以从light.position照射到light.target.position</p><p>light.target必须要添加到scene中</p><pre><code class="hljs javascript" lang="javascript">  <span class="hljs-comment">/**   * 光源设置   */</span>  <span class="hljs-comment">// 平行光</span>  <span class="hljs-keyword">var</span> directionalLight = <span class="hljs-keyword">new</span> THREE.DirectionalLight(<span class="hljs-number">0xffffff</span>, <span class="hljs-number">1</span>);  <span class="hljs-keyword">let</span> v3 = <span class="hljs-keyword">new</span> THREE.Vector3(<span class="hljs-number">120</span>, <span class="hljs-number">120</span>, <span class="hljs-number">-100</span>);  directionalLight.position.copy(v3);  scene.add(directionalLight);  <span class="hljs-keyword">var</span> helper = <span class="hljs-keyword">new</span> THREE.DirectionalLightHelper(directionalLight, <span class="hljs-number">5</span>);  scene.add(helper);  <span class="hljs-keyword">var</span> geometry = <span class="hljs-keyword">new</span> THREE.BoxGeometry(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>); <span class="hljs-comment">//创建一个立方体几何对象Geometry</span>  <span class="hljs-keyword">var</span> material = <span class="hljs-keyword">new</span> THREE.MeshLambertMaterial({    <span class="hljs-attr">color</span>: <span class="hljs-number">0xff0000</span>,  }); <span class="hljs-comment">//材质对象Material</span>  <span class="hljs-keyword">var</span> mesh = <span class="hljs-keyword">new</span> THREE.Mesh(geometry, material); <span class="hljs-comment">//网格模型对象Mesh</span>  <span class="hljs-comment">// directionalLight.position.set(120, 120, -100);</span>  <span class="hljs-keyword">let</span> v3n = v3.negate();  mesh.position.copy(v3n);  directionalLight.target = mesh;  scene.add( directionalLight.target );  <span class="hljs-keyword">let</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;btn&quot;</span>);  <span class="hljs-keyword">if</span> (btn) {    btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{      setInterval(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {        <span class="hljs-keyword">let</span> y = directionalLight.target.position.y;        directionalLight.target.position.setY(y - <span class="hljs-number">5</span>);        helper.update ()      }, <span class="hljs-number">100</span>);    };  }</code></pre><p>这样设置，灯光就可以一直跟踪directionalLight.target进行照射，而不是一个只有旋转分量的&#39;自由平行光&#39;</p><p></p><figure><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/28/171bf673ab134d6f~tplv-t2oaga2asx-image.image"><figcaption></figcaption></figure><p></p><p>通过这样的调整，我们可以做很多效果，比如日出日落等</p><p>其他光源可以在以后学习中继续探索</p><p>有一起学习的小伙伴，可以留言、关注一起探讨threejs</p>',81),l={expose:[],setup:n=>(defineExpose({frontmatter:{}}),(n,l)=>(s(),a("div",p,[e])))};export default l;
