{"version":3,"sources":["webpack:///src/view/3dMax/index.vue","webpack:///./src/view/3dMax/index.vue?2889","webpack:///./src/view/3dMax/index.vue","webpack:///./static/three_case/case/基础案例.html","webpack:///./static/three_case/case/造型six.html","webpack:///./static/three_case/case .(html)$","webpack:///./static/three_case/case/全景图.html","webpack:///./static/three_case/case/五星好评.html"],"names":["_dMax","name","data","caseNameList","created","_this","this","context","__webpack_require__","keys","length","forEach","element","str","replace","push","view_3dMax","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","gutter","_l","index","key","span","_v","_s","staticRenderFns","Component","normalizeComponent","__webpack_exports__","module","exports","map","./五星好评.html","./全景图.html","./基础案例.html","./造型six.html","webpackContext","req","webpackContextResolve","id","Error","Object","resolve"],"mappings":"uGAYA,IAAAA,GACAC,KAAA,SACAC,KAFA,WAGA,OACAC,kBAGAC,QAPA,WAOA,IAAAC,EAAAC,KACAC,EAAAC,EAAA,QAEAC,OACA,IAAAF,EAAAG,QACAH,EAAAI,QAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAE,QAAA,SACAT,EAAAF,aAAAY,KAAAF,OCvBeG,GADEC,OAFjB,WAA0B,IAAAC,EAAAZ,KAAaa,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,WAAqBF,EAAA,UAAeG,OAAOC,OAAA,KAAaP,EAAAQ,GAAAR,EAAA,sBAAAhB,EAAAyB,GAAgD,OAAAN,EAAA,UAAoBO,IAAAD,EAAAH,OAAiBK,KAAA,MAAWR,EAAA,OAAYE,YAAA,2BAAqCL,EAAAY,GAAA,aAAAZ,EAAAa,GAAA7B,GAAA,kBAAmD,QAErV8B,oBCYjBC,EAdyBzB,EAAQ,OAcjC0B,CACElC,EACAgB,GATF,EAEA,KAEA,KAEA,MAUemB,EAAA,QAAAF,EAAiB,4BCvBhCG,EAAAC,QAAA,kmCCAAD,EAAAC,QAAA,4gZCAA,IAAAC,GACAC,cAAA,OACAC,aAAA,OACAC,cAAA,OACAC,eAAA,QAEA,SAAAC,EAAAC,GACA,OAAApC,EAAAqC,EAAAD,IAEA,SAAAC,EAAAD,GACA,IAAAE,EAAAR,EAAAM,GACA,KAAAE,EAAA,GACA,UAAAC,MAAA,uBAAAH,EAAA,MACA,OAAAE,EAEAH,EAAAlC,KAAA,WACA,OAAAuC,OAAAvC,KAAA6B,IAEAK,EAAAM,QAAAJ,EACAT,EAAAC,QAAAM,EACAA,EAAAG,GAAA,2BCpBAV,EAAAC,QAAA,s0KCAAD,EAAAC,QAAA","file":"static/js/2.f3d5bc0969d6156ff919.js","sourcesContent":["<template>\r\n  <div class=\"case3d\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"12\" v-for=\"(data, index) in caseNameList\" :key=\"index\">\r\n        <div class=\"grid-content bg-purple\">\r\n          {{ data }}\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"case3d\",\r\n  data() {\r\n    return {\r\n      caseNameList: []\r\n    };\r\n  },\r\n  created() {\r\n    const context = require\r\n      .context(\"../../../static/three_case/case\", true, /.(html)$/)\r\n      .keys();\r\n    if (context.length !== 0) {\r\n      context.forEach(element => {\r\n        let str = element.replace(\"./\", \"\");\r\n        this.caseNameList.push(str);\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/view/3dMax/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"case3d\"},[_c('el-row',{attrs:{\"gutter\":20}},_vm._l((_vm.caseNameList),function(data,index){return _c('el-col',{key:index,attrs:{\"span\":12}},[_c('div',{staticClass:\"grid-content bg-purple\"},[_vm._v(\"\\n        \"+_vm._s(data)+\"\\n      \")])])}),1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-ca8ef548\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/3dMax/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ca8ef548\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/3dMax/index.vue\n// module id = null\n// module chunks = ","module.exports = \"<html>\\n  <head>\\n    <title>My first three.js app</title>\\n    <style>\\n      body {\\n        margin: 0;\\n      }\\n      canvas {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <script src=\\\"../three.js-master\\\\build\\\\three.js\\\"></script>\\n    <script>\\n      var scene = new THREE.Scene()\\n      var camera = new THREE.PerspectiveCamera(\\n        75,\\n        window.innerWidth / window.innerHeight,\\n        0.1,\\n        1000\\n      )\\n\\n<pre><code>  var renderer = new THREE.WebGLRenderer()\\n  renderer.setSize(window.innerWidth, window.innerHeight)\\n  document.body.appendChild(renderer.domElement)\\n\\n  var geometry = new THREE.BoxGeometry(1, 1, 1)\\n  var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 })\\n  var cube = new THREE.Mesh(geometry, material)\\n  scene.add(cube)\\n\\n  camera.position.z = 5\\n\\n  var animate = function() {\\n    requestAnimationFrame(animate)\\n\\n    cube.rotation.x += 0.01\\n    cube.rotation.y += 0.01\\n\\n    renderer.render(scene, camera)\\n  }\\n\\n  animate()\\n&lt;/script&gt;</code></pre>  </body>\\n</html>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/three_case/case/基础案例.html\n// module id = E2NW\n// module chunks = 2","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\" />\\n    <title>Document</title>\\n    <style>\\n      * {\\n        margin: 0;\\n        padding: 0;\\n      }\\n      body {\\n        overflow: hidden;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <script src=\\\"../three.js-master\\\\build\\\\three 107.js\\\"></script>\\n    <script src=\\\"../three.js-master/examples/js/controls/OrbitControls.js\\\"></script>\\n    <script src=\\\"../three.js-master\\\\examples\\\\js\\\\loaders\\\\OBJLoader.js\\\"></script>\\n    <script src=\\\"https://johnson2heng.github.io/three.js-demo/lib/threebsp.js\\\"></script>\\n    <script src=\\\"../three.js-master\\\\examples\\\\js\\\\loaders\\\\EquirectangularToCubeGenerator.js\\\"></script>\\n    <script>\\n      var scene,\\n        camera,\\n        width,\\n        height,\\n        controls,\\n        spotLight,\\n        container,\\n        textureLoader,\\n        dlsImg,\\n        group = new THREE.Group(),\\n        cubeCamera1,\\n        verMaterial\\n      init()\\n      animate()\\n      function init() {\\n        container = document.createElement('div')\\n        document.body.appendChild(container)\\n\\n<pre><code>    width = window.innerWidth\\n    height = window.innerHeight\\n    textureLoader = new THREE.TextureLoader()\\n    setScene()\\n    setCamera()\\n    setRenderer()\\n    setLight()\\n    setControals()\\n    setHelper()\\n    setBottom()\\n    setSix()\\n    setHelfObj()\\n    setVertical()\\n    setVarBox()\\n    setToru()\\n  }\\n  function setToru() {\\n    var geometry = new THREE.TorusGeometry(40, 2, 16, 100)\\n    var material = new THREE.MeshPhongMaterial({\\n      color: 0x4B2EE8,\\n      transparent: true, // 是否透明\\n      opacity: 0.8,\\n      envMap: cubeCamera1.renderTarget.texture\\n    })\\n    // material.blendDst = THREE.DstAlphaFactor\\n    var torus = new THREE.Mesh(geometry, material)\\n    torus.receiveShadow = true\\n    torus.castShadow = true\\n    torus.matrixAutoUpdate = false;\\n    scene.add(torus)\\n  }\\n  function setVarBox() {\\n    var cubeGeometry = new THREE.BoxGeometry(20, 50, 25)\\n    var material = new THREE.MeshPhongMaterial({\\n      transparent: true, // 是否透明\\n      opacity: 0.8,\\n      envMap: cubeCamera1.renderTarget.texture\\n    })\\n    var box = new THREE.Mesh(cubeGeometry, material)\\n    box.position.set(19.5, 86, -20)\\n    box.rotation.z = -0.1 * Math.PI\\n    box.receiveShadow = true\\n    box.castShadow = true\\n    group.add(box)\\n  }\\n  function setVertical() {\\n    cubeCamera1 = new THREE.CubeCamera(1, 1000, 256)\\n    cubeCamera1.renderTarget.texture.generateMipmaps = true\\n    cubeCamera1.renderTarget.texture.minFilter =\\n      THREE.LinearMipmapLinearFilter\\n\\n    var geometry = new THREE.CylinderGeometry(5, 5, 55, 32)\\n    verMaterial = new THREE.MeshLambertMaterial({\\n      transparent: true, // 是否透明\\n      opacity: 0.8,\\n      envMap: cubeCamera1.renderTarget.texture\\n    })\\n\\n    var cylinder = new THREE.Mesh(geometry, verMaterial)\\n    cylinder.castShadow = true\\n    cylinder.receiveShadow = true\\n    cylinder.rotation.z = -0.1 * Math.PI\\n    cylinder.position.set(50, 50, -25)\\n    group.add(cylinder)\\n  }\\n  function setHelfObj() {\\n    let mw = setMwMap(54, 30, 0.04, &#39;mw&#39;, 30)\\n    mw.rotation.z = -0.54 * Math.PI\\n    mw.position.set(52, 52.5, -35)\\n    group.add(mw)\\n\\n    let zp = setMwMap(54, 30, 0.12, &#39;zp&#39;, 34)\\n    zp.rotation.z = 0.26 * Math.PI\\n    zp.position.set(49.5, 47, -37)\\n    group.add(zp)\\n  }\\n  // 大半径，小半径,角度，贴图，厚度\\n  function setMwMap(dr, sr, d, m, dep) {\\n    let bigSix = setCircle(dr, 50, d, 0x00ffff, dep)\\n    let simSix = setCircle(sr, 50, d, 0x00ffff, dep)\\n    let mw = initSubtract(bigSix, simSix, &#39;subtract&#39;, &#39;&#39;, 0xffc8c4)\\n    textureLoader.load(`./img/${m}.jpg`, function(map) {\\n      map.offset = new THREE.Vector2(0.5, 0.5)\\n      map.repeat = new THREE.Vector2(0.01, 0.01)\\n      var material = new THREE.MeshPhongMaterial({\\n        map: map\\n      })\\n      mw.material = material\\n    })\\n    return mw\\n  }\\n  function setSix() {\\n    let bigSix = setCircle(50, 168, 0.8, 0x00ffff, 25)\\n    let simSix = setCircle(30, 168, 0.8, 0x00ffff, 25)\\n    let six = initSubtract(bigSix, simSix, &#39;subtract&#39;, &#39;&#39;, 0xffaba8)\\n    six.receiveShadow = true\\n    six.castShadow = true\\n    six.position.set(50, 50, -32.5)\\n    six.rotation.z = 0.9 * Math.PI\\n    group.add(six)\\n  }\\n\\n  function setBottom() {\\n    let box = setBox(50, 50, 40, 0xff00ff)\\n    // 创建圆柱\\n    let cylinder = setCylinder(50, 50, 50, 48, 0x00ffff)\\n    let cylinder2 = setCylinder(25, 25, 80, 48, 0x00ffff)\\n    cylinder.rotation.x = 0.5 * Math.PI\\n    cylinder.position.x = 25\\n    cylinder.position.y = 25\\n\\n    textureLoader.load(`img/mw.jpg`, function(map) {\\n      var material = new THREE.MeshPhongMaterial({\\n        map: dlsImg\\n      })\\n      cylinder.material = material\\n      // scene.add(cylinder)\\n    })\\n    textureLoader.load(`img/mw.jpg`, function(map) {\\n      var material = new THREE.MeshPhongMaterial({\\n        map: dlsImg\\n      })\\n      cylinder2.material = material\\n      // scene.add(cylinder2)\\n    })\\n    // cylinder.position.set(10,10,10)\\n    let helfBox = initSubtract(box, cylinder, &#39;subtract&#39;)\\n    let box2 = setBox(10, 20, 52, 0x00ff00)\\n    let box3 = setBox(20, 10, 52, 0x00ff00)\\n    box2.position.set(-25, 18, 0)\\n    box3.position.set(18, -25, 0)\\n    let box4 = initSubtract(box2, box3, &#39;union&#39;)\\n    let bottomLeft = initSubtract(helfBox, box4, &#39;subtract&#39;, &#39;dls&#39;)\\n    bottomLeft.position.set(25, 25, -20)\\n    var bottomRight = initSubtract(helfBox, box4, &#39;subtract&#39;, &#39;dls&#39;)\\n    bottomRight.rotation.z = 0.5 * Math.PI\\n    bottomRight.position.set(75, 25, -20)\\n    bottomLeft.receiveShadow = true\\n    bottomLeft.castShadow = true\\n    bottomRight.receiveShadow = true\\n    bottomRight.castShadow = true\\n    group.add(bottomLeft)\\n    group.add(bottomRight)\\n  }\\n\\n  //  subtract元素相减 被减数，减数  intersect相交 union相加\\n  function initSubtract(a, b, type, texture, c) {\\n    var boxBsp = new ThreeBSP(a)\\n    var cylinderBSP = new ThreeBSP(b)\\n    var resultBSP\\n    if (type == &#39;subtract&#39;) {\\n      resultBSP = boxBsp.subtract(cylinderBSP)\\n    } else if (type == &#39;intersect&#39;) {\\n      resultBSP = boxBsp.intersect(cylinderBSP)\\n    } else if (type == &#39;union&#39;) {\\n      resultBSP = boxBsp.union(cylinderBSP)\\n    }\\n    var result = resultBSP.toMesh()\\n    result.geometry.computeFaceNormals()\\n    result.geometry.computeVertexNormals()\\n    if (texture) {\\n      textureLoader.load(`img/${texture}.jpg`, function(map) {\\n        // console.log(map)\\n        map.center.x = 20\\n        map.center.y = 20\\n        dlsImg = map\\n        result.material = new THREE.MeshStandardMaterial({\\n          map: dlsImg,\\n          metalness: 0.0,\\n          roughness: 0.0,\\n          envMapIntensity: 1.0\\n        })\\n        // result.material = material\\n      })\\n    } else {\\n      result.material = new THREE.MeshPhongMaterial({\\n        color: c || 0x0000ff\\n      })\\n      // result.material = material\\n    }\\n    return result\\n  }\\n\\n  function setCircle(r, s, d, c, dep) {\\n    var geometry = new THREE.CircleGeometry(r, s, 0, 2 * Math.PI * d)\\n    var material = new THREE.MeshBasicMaterial({\\n      color: c,\\n      side: THREE.DoubleSide\\n    })\\n    var circle = new THREE.Mesh(geometry, material)\\n    var newCircle = getExtrude(circle.geometry.vertices, dep, c)\\n    return newCircle\\n  }\\n  // 积压\\n  function getExtrude(points, dep, c) {\\n    var shape = new THREE.Shape(points)\\n    var geometry = new THREE.ExtrudeGeometry( //拉伸造型\\n      shape, //二维轮廓\\n      //拉伸参数\\n      {\\n        amount: dep, //拉伸长度\\n        curveSegments: 12, //拉伸轮廓细分数\\n        steps: 12, //拉伸方向的细分数\\n        bevelEnabled: false, //无倒角\\n        bevelSegments: 0.1, //倒直角：设置为1  倒圆角：越大越光滑\\n        bevelThickness: 40 //拉伸方向尺寸\\n        // bevelSize: 4,//径向尺寸\\n      }\\n    )\\n    var material = new THREE.MeshPhongMaterial({\\n      color: c || 0x00ffff,\\n      // wireframe: true,\\n      side: THREE.DoubleSide //两面可见\\n    }) //材质对象\\n    var mesh = new THREE.Mesh(geometry, material) //网格模型对象\\n    return mesh\\n  }\\n\\n  // 创建圆柱 上半径，下半径，厚度，细分数，颜色\\n  function setCylinder(xr, yr, d, f, c) {\\n    var geometry = new THREE.CylinderGeometry(xr, yr, d, f)\\n    var material = new THREE.MeshLambertMaterial({ color: c })\\n    var cylinder = new THREE.Mesh(geometry, material)\\n    return cylinder\\n  }\\n\\n  function setShape(r, d, s, c, map) {\\n    var geometry = new THREE.Geometry() //声明一个几何体对象Geometry\\n    var R = r //圆弧半径\\n    // 可以通过分段数量的多少  绘制多边形\\n    var N = 360 //分段数量\\n    var points = 360\\n    // 批量生成圆弧上的顶点数据\\n    let a = 0\\n    var shape = new THREE.Shape()\\n    for (var i = 0; i &lt; points; i++) {\\n      var angle = ((2 * Math.PI * d) / N) * i\\n      var x = R * Math.sin(angle)\\n      var y = R * Math.cos(angle)\\n      if (i === 0) {\\n        shape.moveTo(0, 0, 0) //起点\\n      } else {\\n        shape.lineTo(x, y, 0)\\n      }\\n    }\\n\\n    var geometry = new THREE.ExtrudeGeometry( //拉伸造型\\n      shape, //二维轮廓\\n      //拉伸参数\\n      {\\n        amount: s, //拉伸长度\\n        curveSegments: 12, //拉伸轮廓细分数\\n        steps: 12, //拉伸方向的细分数\\n        bevelEnabled: false, //无倒角\\n        bevelSegments: 0.1, //倒直角：设置为1  倒圆角：越大越光滑\\n        bevelThickness: 40 //拉伸方向尺寸\\n        // bevelSize: 4,//径向尺寸\\n      }\\n    )\\n    var material = new THREE.MeshPhongMaterial({\\n      color: c || 0x00ffff,\\n      side: THREE.DoubleSide //两面可见\\n      // wireframe: true,\\n    }) //材质对象\\n    var mesh = new THREE.Mesh(geometry, material) //网格模型对象\\n    return mesh\\n    // scene.add(mesh) //网格模型添加到场景中\\n  }\\n  // 创建立方体  宽高厚度颜色\\n  function setBox(w, h, d, c) {\\n    var cubeGeometry = new THREE.BoxGeometry(w, h, d)\\n    var material = new THREE.MeshLambertMaterial({ color: c })\\n    var box = new THREE.Mesh(cubeGeometry, material)\\n    // scene.add(box)\\n    return box\\n  }\\n\\n  function setScene() {\\n    scene = new THREE.Scene()\\n    scene.background = new THREE.Color(0x74f5eb)\\n    group.position.set(-50, -50, 25)\\n    group.castShadow = true\\n    group.receiveShadow = true\\n    scene.add(group)\\n  }\\n\\n  function setCamera() {\\n    camera = new THREE.PerspectiveCamera(100, width / height, 1, 1000)\\n    camera.position.set(0, 0, 200)\\n    camera.lookAt(scene.position)\\n  }\\n\\n  function setRenderer() {\\n    renderer = new THREE.WebGLRenderer({\\n      antialias: true\\n    })\\n    renderer.setPixelRatio(window.devicePixelRatio)\\n    renderer.setSize(width, height)\\n    container.appendChild(renderer.domElement) //body元素中插入canvas对象\\n    renderer.shadowMap.enabled = true\\n  }\\n\\n  function setHelper() {\\n    var axisHelper = new THREE.AxisHelper(250)\\n    scene.add(axisHelper)\\n\\n    var spotLightHelper = new THREE.SpotLightHelper(spotLight)\\n    scene.add(spotLightHelper)\\n\\n    // var cameraHelper = new THREE.CameraHelper(camera)\\n    // scene.add(cameraHelper)\\n  }\\n\\n  function setLight() {\\n    var ambient = new THREE.AmbientLight(0xffffff, 0.1)\\n    scene.add(ambient)\\n\\n    hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\\n    hemiLight.color.setHSL(1, 1, 1)\\n    // hemiLight.groundColor.setHSL(0.095, 1, 0.75)\\n    hemiLight.castShadow = true\\n    hemiLight.position.set(-100, 100, 0)\\n    scene.add(hemiLight)\\n\\n    hemiLightHelper = new THREE.HemisphereLightHelper(hemiLight, 10)\\n    scene.add(hemiLightHelper)\\n\\n    //\\n    spotLight = new THREE.SpotLight(0xffffff)\\n    spotLight.position.set(0, 200, 100)\\n    spotLight.castShadow = true\\n    scene.add(spotLight)\\n\\n    var dirLight = new THREE.DirectionalLight(0xffffff, 1)\\n    dirLight.color.setHSL(0.1, 1, 0.95)\\n    dirLight.position.set(0, 200, 100)\\n    dirLight.position.multiplyScalar(30)\\n    // scene.add( dirLight );\\n\\n    dirLight.castShadow = true\\n\\n    dirLight.shadow.mapSize.width = 2048\\n    dirLight.shadow.mapSize.height = 2048\\n\\n    var d = 50\\n\\n    dirLight.shadow.camera.left = -d\\n    dirLight.shadow.camera.right = d\\n    dirLight.shadow.camera.top = d\\n    dirLight.shadow.camera.bottom = -d\\n\\n    dirLight.shadow.camera.far = 3500\\n    dirLight.shadow.bias = -0.0001\\n  }\\n\\n  function setControals() {\\n    controls = new THREE.OrbitControls(camera, renderer.domElement)\\n  }\\n\\n  function render() {\\n    controls.update()\\n    if (cubeCamera1 &amp;&amp; verMaterial &amp;&amp; group) {\\n      // verMaterial.envMap = cubeCamera1.renderTarget.texture;\\n      cubeCamera1.update(renderer, scene)\\n    }\\n    renderer.render(scene, camera)\\n  }\\n\\n  function animate() {\\n    requestAnimationFrame(animate)\\n    render()\\n  }\\n&lt;/script&gt;</code></pre>  </body>\\n</html>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/three_case/case/造型six.html\n// module id = KFJY\n// module chunks = 2","var map = {\n\t\"./五星好评.html\": \"ij02\",\n\t\"./全景图.html\": \"ThRu\",\n\t\"./基础案例.html\": \"E2NW\",\n\t\"./造型six.html\": \"KFJY\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"NOU1\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/three_case/case .(html)$\n// module id = NOU1\n// module chunks = 2","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <title>three.js webgl - equirectangular panorama</title>\\n    <meta charset=\\\"utf-8\\\" />\\n    <meta\\n      name=\\\"viewport\\\"\\n      content=\\\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\\\"\\n    />\\n    <link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"main.css\\\" />\\n    <style>\\n      * {\\n        margin: 0;\\n        padding: 0;\\n      }\\n      body {\\n        overflow: hidden;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <div id=\\\"container\\\"></div>\\n\\n<pre><code>&lt;script type=&quot;module&quot;&gt;\\n  import * as THREE from &quot;../three.js-master/build/three.module.js&quot;;\\n\\n  var camera, scene, renderer;\\n\\n  var isUserInteracting = false,\\n    onMouseDownMouseX = 0,\\n    onMouseDownMouseY = 0,\\n    lon = 0,\\n    onMouseDownLon = 0,\\n    lat = 0,\\n    onMouseDownLat = 0,\\n    phi = 0,\\n    theta = 0;\\n\\n  init();\\n  animate();\\n\\n  function init() {\\n    var container, mesh;\\n\\n    container = document.getElementById(&quot;container&quot;);\\n\\n    camera = new THREE.PerspectiveCamera(\\n      75,\\n      window.innerWidth / window.innerHeight,\\n      1,\\n      1100\\n    );\\n    camera.target = new THREE.Vector3(0, 0, 0);\\n\\n    scene = new THREE.Scene();\\n\\n    var geometry = new THREE.SphereBufferGeometry(500, 60, 40);\\n    // invert the geometry on the x-axis so that all of the faces point inward\\n    geometry.scale(-1, 1, 1);\\n\\n    var texture = new THREE.TextureLoader().load(&quot;../images/大连全景.jpg&quot;);\\n    var material = new THREE.MeshBasicMaterial({ map: texture });\\n\\n    mesh = new THREE.Mesh(geometry, material);\\n\\n    scene.add(mesh);\\n\\n    renderer = new THREE.WebGLRenderer();\\n    renderer.setPixelRatio(window.devicePixelRatio);\\n    renderer.setSize(window.innerWidth, window.innerHeight);\\n    container.appendChild(renderer.domElement);\\n\\n    document.addEventListener(&quot;mousedown&quot;, onPointerStart, false);\\n    document.addEventListener(&quot;mousemove&quot;, onPointerMove, false);\\n    document.addEventListener(&quot;mouseup&quot;, onPointerUp, false);\\n\\n    // document.addEventListener(&quot;wheel&quot;, onDocumentMouseWheel, false);\\n\\n    document.addEventListener(&quot;touchstart&quot;, onPointerStart, false);\\n    document.addEventListener(&quot;touchmove&quot;, onPointerMove, false);\\n    document.addEventListener(&quot;touchend&quot;, onPointerUp, false);\\n\\n    //\\n\\n    document.addEventListener(\\n      &quot;dragover&quot;,\\n      function(event) {\\n        event.preventDefault();\\n        event.dataTransfer.dropEffect = &quot;copy&quot;;\\n      },\\n      false\\n    );\\n\\n    document.addEventListener(\\n      &quot;dragenter&quot;,\\n      function() {\\n        document.body.style.opacity = 0.5;\\n      },\\n      false\\n    );\\n\\n    document.addEventListener(\\n      &quot;dragleave&quot;,\\n      function() {\\n        document.body.style.opacity = 1;\\n      },\\n      false\\n    );\\n\\n    document.addEventListener(\\n      &quot;drop&quot;,\\n      function(event) {\\n        event.preventDefault();\\n\\n        var reader = new FileReader();\\n        reader.addEventListener(\\n          &quot;load&quot;,\\n          function(event) {\\n            material.map.image.src = event.target.result;\\n            material.map.needsUpdate = true;\\n          },\\n          false\\n        );\\n        reader.readAsDataURL(event.dataTransfer.files[0]);\\n\\n        document.body.style.opacity = 1;\\n      },\\n      false\\n    );\\n\\n    //\\n\\n    window.addEventListener(&quot;resize&quot;, onWindowResize, false);\\n  }\\n\\n  function onWindowResize() {\\n    camera.aspect = window.innerWidth / window.innerHeight;\\n    camera.updateProjectionMatrix();\\n\\n    renderer.setSize(window.innerWidth, window.innerHeight);\\n  }\\n\\n  function onPointerStart(event) {\\n    isUserInteracting = true;\\n\\n    var clientX = event.clientX || event.touches[0].clientX;\\n    var clientY = event.clientY || event.touches[0].clientY;\\n\\n    onMouseDownMouseX = clientX;\\n    onMouseDownMouseY = clientY;\\n\\n    onMouseDownLon = lon;\\n    onMouseDownLat = lat;\\n  }\\n\\n  function onPointerMove(event) {\\n    if (isUserInteracting === true) {\\n      var clientX = event.clientX || event.touches[0].clientX;\\n      var clientY = event.clientY || event.touches[0].clientY;\\n\\n      lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;\\n      lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;\\n    }\\n  }\\n\\n  function onPointerUp() {\\n    isUserInteracting = false;\\n  }\\n\\n  function onDocumentMouseWheel(event) {\\n    var fov = camera.fov + event.deltaY * 0.05;\\n\\n    camera.fov = THREE.Math.clamp(fov, 10, 75);\\n\\n    camera.updateProjectionMatrix();\\n  }\\n\\n  function animate() {\\n    requestAnimationFrame(animate);\\n    update();\\n  }\\n\\n  function update() {\\n    if (isUserInteracting === false) {\\n      lon += 0.1;\\n    }\\n\\n    lat = Math.max(-85, Math.min(85, lat));\\n    phi = THREE.Math.degToRad(90 - lat);\\n    theta = THREE.Math.degToRad(lon);\\n\\n    camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);\\n    camera.target.y = 500 * Math.cos(phi);\\n    camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);\\n\\n    camera.lookAt(camera.target);\\n\\n    /*\\n            // distortion\\n            camera.position.copy( camera.target ).negate();\\n            */\\n\\n    renderer.render(scene, camera);\\n  }\\n&lt;/script&gt;</code></pre>  </body>\\n</html>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/three_case/case/全景图.html\n// module id = ThRu\n// module chunks = 2","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\" />\\n    <title>五星评分</title>\\n    <style>\\n      /* 父元素，因为~符号只能匹配下面的兄弟节点，所以使用弹性盒的倒序改变五角星的排列方式 */\\n      .box {\\n        width: 320px;\\n        height: 60px;\\n        margin: 0 auto;\\n        display: flex;\\n        flex-direction: row-reverse;\\n        justify-content: space-between;\\n      }\\n      /* 隐藏单选 */\\n      input {\\n        display: none;\\n      }\\n      /* 五角星默认样式 */\\n      input[type=\\\"radio\\\"] + label > svg > path {\\n        d: path(\\n          \\\"M27.500,1.501 L36.069,16.899 L53.497,20.217 L41.365,33.051 L43.567,50.499 L27.500,43.032 L11.433,50.499 L13.635,33.051 L1.503,20.217 L18.931,16.899 L27.500,1.501 \\\"\\n        );\\n        stroke-width: 1px;\\n        fill: none;\\n        stroke: #333;\\n      }\\n      /* 移入，点击选中的元素和下面的元素变为实心 */\\n      input[type=\\\"radio\\\"] + label:hover > svg > path,\\n      input[type=\\\"radio\\\"]\\n        + label:hover\\n        ~ input[type=\\\"radio\\\"]\\n        + label\\n        > svg\\n        > path,\\n      input[type=\\\"radio\\\"]:checked + label > svg > path,\\n      input[type=\\\"radio\\\"]:checked ~ input[type=\\\"radio\\\"] + label > svg > path {\\n        stroke-width: 0px;\\n        fill: #f00;\\n      }\\n    </style>\\n  </head>\\n\\n  <body>\\n    <div class=\\\"box\\\">\\n      <input type=\\\"radio\\\" id=\\\"one\\\" name=\\\"check\\\" />\\n      <label for=\\\"one\\\">\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          width=\\\"56.5px\\\"\\n          height=\\\"53.5px\\\"\\n        >\\n          <path />\\n        </svg>\\n      </label>\\n      <input type=\\\"radio\\\" id=\\\"two\\\" name=\\\"check\\\" />\\n      <label for=\\\"two\\\">\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          width=\\\"56.5px\\\"\\n          height=\\\"53.5px\\\"\\n        >\\n          <path />\\n        </svg>\\n      </label>\\n      <input type=\\\"radio\\\" id=\\\"three\\\" name=\\\"check\\\" />\\n      <label for=\\\"three\\\">\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          width=\\\"56.5px\\\"\\n          height=\\\"53.5px\\\"\\n        >\\n          <path />\\n        </svg>\\n      </label>\\n      <input type=\\\"radio\\\" id=\\\"four\\\" name=\\\"check\\\" />\\n      <label for=\\\"four\\\">\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          width=\\\"56.5px\\\"\\n          height=\\\"53.5px\\\"\\n        >\\n          <path />\\n        </svg>\\n      </label>\\n      <input type=\\\"radio\\\" id=\\\"five\\\" name=\\\"check\\\" checked />\\n      <label for=\\\"five\\\">\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n          width=\\\"56.5px\\\"\\n          height=\\\"53.5px\\\"\\n        >\\n          <path />\\n        </svg>\\n      </label>\\n    </div>\\n  </body>\\n</html>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/three_case/case/五星好评.html\n// module id = ij02\n// module chunks = 2"],"sourceRoot":""}