import {
  doWatch,
  hasChanged,
  isFunction,
  isRef,
  toRaw,
  toReactive,
  trackRefValue,
  triggerRefValue
} from "./chunk.4OCMLI6N.js";

// node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js
function ref(value) {
  return createRef(value, false);
}
function shallowRef(value) {
  return createRef(value, true);
}
function createRef(rawValue, shallow) {
  if (isRef(rawValue)) {
    return rawValue;
  }
  return new RefImpl(rawValue, shallow);
}
var RefImpl = class {
  constructor(value, __v_isShallow) {
    this.__v_isShallow = __v_isShallow;
    this.dep = void 0;
    this.__v_isRef = true;
    this._rawValue = __v_isShallow ? value : toRaw(value);
    this._value = __v_isShallow ? value : toReactive(value);
  }
  get value() {
    trackRefValue(this);
    return this._value;
  }
  set value(newVal) {
    newVal = this.__v_isShallow ? newVal : toRaw(newVal);
    if (hasChanged(newVal, this._rawValue)) {
      this._rawValue = newVal;
      this._value = this.__v_isShallow ? newVal : toReactive(newVal);
      triggerRefValue(this, newVal);
    }
  }
};

// node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js
function watchEffect(effect, options) {
  return doWatch(effect, null, options);
}
function defineComponent(options) {
  return isFunction(options) ? {setup: options, name: options.name} : options;
}

export {
  ref,
  shallowRef,
  watchEffect,
  defineComponent
};
//# sourceMappingURL=chunk.S5QGJ44A.js.map
