import { trim } from './string'
class ClipboardJS {
  private dom: HTMLDivElement | any | null = null
  private error: string = ''
  private text: string = ''
  /**
   * 
   * @param id 需要拷贝内容的元素的id 单独调用复制方法  id可不传
   * @param html 是否拷贝html元素 default false
   */
  constructor(id?: string, html?: boolean) {
    const h = html || false
    this.error = ''
    if (id) {
      const dom = document.querySelector('#' + id) as any
      if (dom) {
        this.dom = dom
        let text = ''
        if (dom.tagName === 'INPUT' || dom.tagName === 'TEXTAREA') text = dom.value
        else text = h ? trim(this.dom.innerHTML) : this.dom.innerText
        this.text = text
        this.in(text)
      } else {
        this.error = 'id' + id + '未找到'
      }
    }
  }
  /**
   * 
   * @param text 加入剪贴板的具体文字
   * @param fn 单独调用复制时候的回调
   */
  in(text: string, fn?: Function) {
    try {
      this.error = ''
      var tag = document.createElement('input');
      tag.setAttribute('id', 'clipboard_js');
      tag.value = text;
      document.getElementsByTagName('body')[0].appendChild(tag);
      tag.select();
      document.execCommand('copy');
      tag.parentElement.removeChild(tag)
      this.text = text
      if (fn) fn(text)
    } catch (error) {
      this.error = error
    }

  }
  /**
   * 回调
   * @param name 回调的名称 success error
   * @param fn 回调的方法
   */
  on(name: string, fn: Function) {
    if (name.toUpperCase() === 'ERROR') {
      if (this.error !== '') {
        fn(this.error)
      }
    }

    if (name.toUpperCase() === 'SUCCESS') {
      if (this.error === '') {
        fn(this.text)
      }
    }

  }
}
export {
  ClipboardJS
}