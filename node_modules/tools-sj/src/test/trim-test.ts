/**
 * import { trim } from '../scene/tools'
const str = '  嗯嗯 我是'
console.log(trim(str, false)) // 首尾空格
console.log(trim(str, true)) // 首尾加中间空格

import { validateRule } from '../scene/validate'
const phone = 18141172955
const isphone = validateRule(phone, 6)
console.log(isphone)

// 日期
import moment from '../scene/moment'
const time = +new Date()
let d = moment(10).format('yyyy/mm/dd')
console.log(d)

const m = moment()
console.log('某个日期的时间戳', m.getTimeStamp('2021/3/8 2:10:59'))
console.log('年', m.years())
console.log('月', m.months('mm'))
console.log('日', m.days('dd'))
console.log('时', m.hours('hh'))
console.log('分', m.minutess('MM'))
console.log('秒', m.secondss('ss'))
console.log('周', m.weeks())
console.log('格式化周', m.weeks('ww'))
console.log('格式化周', m.weeks('ww', '周'))
console.log('返回某一天的最开始时间戳', m.firstTimeStamp())
console.log('返回某一天的最后时间戳', m.lastTimeStamp())
console.log('某个月有多少天', m.getMonthDays())
console.log('某年有多少天', m.getYearDays())
console.log('获取某一天所在周的周一和周日', m.getOneDayWeek())

// 格式化日期
console.log(m.format('yyyy'))
console.log(m.format('yyyy/mm/dd hh:MM:ss'))
console.log(m.format('yy'))
console.log(m.format('yy/m/d h:M:s'))




// 复制
import { ClipboardJS } from '../scene/clipboard'
// 复制dom的方法
const dom = document.querySelector('.copy') as any
if (dom) {
  dom.onclick = function () {
    const clipboard = new ClipboardJS('copy-dom')
    clipboard.on('success', (text) => {
      console.log('复制成功', text)
    })
    clipboard.on('error', (error) => {
      console.log(error)
      // alert(error)
    })
  }
}
// 复制具体内容
const copydom = document.querySelector('.only-copy') as any
const clipboard = new ClipboardJS()
if (copydom) {
  copydom.onclick = function () {
    clipboard.in('我是已知内容', (text) => {
      console.log('复制成功', text)
    })
  }
}

// 防抖使用方法
import { debounce } from '../scene/debounce'

const input: any = document.querySelector('#input')
const input2: any = document.querySelector('#input2')

const dd = debounce({func:() => {
  // Do something
}, wait:500})
const dc = debounce({func:() => {
    // Do something
}, wait:500})

if (input) {
  input.oninput = function () {
    dd()
  }
  input2.oninput = function () {
    dc()
  }
}

import {validateRule} from '../scene/validate'

const phone = '18141172955'
const pExp = validateRule(phone, 6)
console.log(pExp) // true
const email = '18141172955@qq.com'
const eExp = validateRule(email, 8)
console.log(eExp) // true

// ie版本判断
import {DetectIE} from '../scene/detectIE'
const isie = DetectIE()
console.log(isie) // ie：返回版本号  非ie：返回false

// 数据类型判断
import {typeOf} from '../scene/typeOf'

// const str1 = typeOf('', 'string')
// console.log('str', str1)// false
// const bool1 = typeOf(true, 'string')
// console.log('bool', bool1) // false

const str = typeOf('', String)
console.log('str', str)// true
const bool = typeOf(true, Boolean)
console.log('bool', bool) // true
const num = typeOf(0.23, Number)
console.log('num', num) // true
const fun = typeOf(function(){}, Function)
console.log('fun', fun) // true
const obj = typeOf({}, Object)
console.log('obj', obj) // true
const arr = typeOf([], Array)
console.log('arr', arr) // true
const nu = typeOf(null, null)
console.log('nu', nu) // true
const und = typeOf(undefined, undefined)
console.log('und', und) // true
const na = typeOf(NaN, Number)
console.log('na', na) // true

const bint = typeOf(BigInt(12), BigInt)
console.log(bint) // true


import {formatNumber} from '../scene/format-number'
try {
  const num = formatNumber(210252)
  console.log('num',num)
} catch (error) {
  console.error(error)
}
 */
